version: "3"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka-broker:
      image: confluentinc/cp-kafka:7.4.4
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network


  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    ports:
      - "5001:5001"
    volumes:
      - /Users/luciorim/Desktop/mini/minishop-server/elk/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - /Users/luciorim/Desktop/mini/minishop-server/elk/logstash:/usr/share/logstash/config
      - /Users/luciorim/Desktop/mini/minishop-server/logs:/usr/share/logstash/logs
      - /Users/luciorim/Desktop/mini/minishop-server/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: [ "-f", "/usr/share/logstash/config/logstash.conf" ]
    depends_on:
      - elasticsearch
    networks:
      - elk-network

  kibana:
      image: docker.elastic.co/kibana/kibana:7.17.13
      ports:
        - "5601:5601"
      environment:
        ELASTICSEARCH_URL: "http://elasticsearch:9300"
      depends_on:
        - logstash
      networks:
        - elk-network

networks:
  elk-network:
    driver: bridge

#  postgres:
#    image: postgres
#    container_name: schoolhub-postgres
#    expose:
#      - "5432"
#    ports:
#      - "5433:5432"
#    volumes:
#      - ./dataset:/docker-entrypoint-initdb.d
#    environment:
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_USER: postgres
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5





